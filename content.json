[{"title":"js错集体","date":"2017-01-15T08:34:28.000Z","path":"2017/01/15/js错集体/","text":"一元函数连接器查找一个字符串中有多少字符重复多个三和五的求和 一元函数连接器Your task is to write a higher order function for chaining together a list of unary functions. In other words, it should return a function that does a left fold on the given functions.chained([a,b,c,d])(input) Should yield the same result asd(c(b(a(input)))) 输入一组函数名，嵌套执行这些函数 Example Tests:12345678910111213function f1(x)&#123; return x*2 &#125;function f2(x)&#123; return x+2 &#125;function f3(x)&#123; return Math.pow(x,2) &#125;function f4(x)&#123; return x.split(\"\").concat().reverse().join(\"\").split(\" \")&#125;function f5(xs)&#123; return xs.concat().reverse() &#125;function f6(xs)&#123; return xs.join(\"_\") &#125;Test.assertEquals( chained([f1,f2,f3])(0), 4 )Test.assertEquals( chained([f1,f2,f3])(2), 36 )Test.assertEquals( chained([f3,f2,f1])(2), 12 )Test.assertEquals(chained([f4,f5,f6])(\"lorem ipsum\"), \"merol_muspi\") My Solution:1none Clever:12345function chained(functions) &#123; return function(input)&#123; return functions.reduce(function(input, fn)&#123; return fn(input) &#125;, input); &#125;&#125; 知识点：Array对象的reduce()方法 在需要用到归并的时候reduce()方法是十分好用的reduce()方法接收两个参数，第一个参数是在每一项上调用的函数，第二个参数（可选的）作为归并的初始值作为参数的函数接受四个参数：1.前一个值； 2.当前值； 3.项目的索引； 4.数组对象。（比迭代方法的函数多一个参数） 闭包 将一个函数作为返回值返回给另一个函数 重复字符计算Write a function that will return the count of distinct case-insensitive alphabetic characters that occur more than once in the input string. The input string can be assumed to contain only alphanumeric characters, including digits, uppercase and lowercase alphabets. Example: “abcde” -&gt; 0 # no characters repeats more than once“aabbcde” -&gt; 2 # &#39;a&#39; and &#39;b&#39;“aabbcdeB” -&gt; 2 # &#39;a&#39; and &#39;b&#39;“indivisibility” -&gt; 1 # &#39;i&#39;“Indivisibilities” -&gt; 2 # &#39;i&#39; and &#39;s&#39; Example Tests:123456Test.assertEquals(duplicateCount(\"\"), 0);Test.assertEquals(duplicateCount(\"abcde\"), 0);Test.assertEquals(duplicateCount(\"aabbcde\"), 2);Test.assertEquals(duplicateCount(\"aabBcde\"), 2,\"should ignore case\");Test.assertEquals(duplicateCount(\"Indivisibility\"), 1)Test.assertEquals(duplicateCount(\"Indivisibilities\"), 2, \"characters may not be adjacent\") My Solution:1234567891011121314151617181920212223function duplicateCount(text)&#123; var a = text.split(''); var repeat = []; var result = 0 for(var i = 0; i &lt; a.length; i++)&#123; a[i] = a[i].toLowerCase(); &#125; for(var i = 0; i &lt; a.length; i++)&#123; begin: for(var j = i + 1; j &lt; a.length; j++)&#123; if(a[i] == a[j])&#123; for(var k = 0; k &lt; repeat.length; k++)&#123; if(a[j] == repeat[k])&#123; break begin; &#125; &#125; result++; repeat.push(a[i]); &#125; &#125; &#125; return result &#125; Clever:123function duplicateCount(text)&#123; return (text.toLowerCase().split('').sort().join('').match(/([^])\\1+/g) || []).length;&#125; 知识点：字符串和数组的基础操作 Str.split()方法用于将字符串使用规定的字符分隔，如果不传入参数，则将每个字符单独保存为数组的一项Array.join()方法用于将数组拼接为字符串，如果不传入参数则拼接为整个字符串 正则表达式 ([^])表示匹配所有字符（包括换行符）；(.)表示匹配所有字符（不包括换行符）\\1 表示重复1次（连续出现两个）； \\1+ 表示重复多次一个优秀的学习正则表达式的网站 RegExr 多个三和五的求和If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23. Finish the solution so that it returns the sum of all the multiples of 3 or 5 below the number passed in. Note: If the number is a multiple of both 3 and 5, only count it once. 输入一个整数，返回所有小于这个整数的能整除3或5的数的和My Solution:12345678function solution(number)&#123; var result = 0; for(var i = 1; i &lt; number; i++)&#123; if(! ((i % 3)&amp;&amp;(i % 5))) result += i; &#125; return result;&#125; Clever:1234function solution(number)&#123; var n3 = Math.floor(--number/3), n5 = Math.floor(number/5), n15 = Math.floor(number/15); return (3 * n3 * (n3 + 1) + 5 * n5 * (n5 + 1) - 15 * n15 * (n15+1)) /2;&#125; 知识点：表达式的执行速度 算数表达式大大快于函数表达式while循环快于for循环","tags":[{"name":"web前端","slug":"web前端","permalink":"http://yoursite.com/tags/web前端/"}]},{"title":"git命令","date":"2017-01-15T06:09:02.000Z","path":"2017/01/15/git命令/","text":"什么是GIT 是一个源代码管理工具 在一个项目中，凡是由开发人员编写的都算是源代码 源代码有必要管理起来？ 让源代码可以被追溯，主要记录每次变更了什么，谁主导这次变化 人为的维护比较麻烦， GIT是Linux之父当年为了维护管理Linux的源代码写的一个工具 Git 之前 很多使用 svn vss tfs hs …… https://guides.github.com/ 安装GIT git命令行工具 基于git命令行的一个客户端软件（提供一个界面去管理源代码） GIT命令操作 初始化一个本地GIT仓储 12cd 当前项目目录git init // 初始化一个本地的仓库 就是在本地文件夹中添加了一个.git的文件夹用于记录所有的项目变更信息 查看本地仓储的变更状态 git status用于查看本地仓储的状态第一次查看，显示的是一坨没有被跟踪的文件 git status -s // -s 是输出简要的变更日志 添加本地暂存（托管）文件 git add可以将一个没有被跟踪的文件添加到跟踪列表 类似于node_modules这种性质的文件是不应该被跟踪 添加本地GIT忽略清单文件 在代码库文件夹的根目录添加一个.gitignore文件此文件用于说明忽略的文件有哪些 提交被托管的文件变化到本地仓储 git commit将本地的变化提交的本地的仓库文件夹归档一般在有了一个小单元的整体变化后再提交 对比差异 git diff可以用于对比当前状态和版本库中状态的变化 提交日志 git log可以查看提交日志 回归到指定版本 git reset –hard 为仓储添加远端（服务器端）地址 将本地仓储的提交记录推送到远端的master分支 拉取远端master分支的更新记录到本地 回归到指定版本 GITHUB基本使用 https://github.com/ GITHUB是一个GIT服务的提供商， 提出社交化编程 http://zoomzhao.github.io/code-guide/https://github.com/jobbole/awesome-javascript-cnhttps://github.com/jobbole/awesome-css-cn","tags":[{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/tags/随笔/"}]}]